apiVersion: apps/v1
kind: Deployment
metadata:
  name: simpleapp
  labels:
    app: simpleapp-deployment

spec:
  replicas: 5
  selector:
    matchLabels:
      app: simpleapp-deployment

  template:
    metadata:
      labels:
        app: simpleapp-deployment

    spec:
      containers:
      - name: simpleapp-container-deployment
        image: 9538253250/linuxusermgmt:v1.0
        ports:
          - containerPort: 8000
        resources:
          requests:
            cpu: 0.05
            ephemeral-storage: "5Gi"
#            memory: 1500
          limits:
            cpu: 0.5
            ephemeral-storage: "10Gi"
#            memory: 2000
#        volumeMounts:
#          - name: ephemeral
#            mountPath: /tmp
#    volumes:
#      - name: ephemeral
#        emptyDir:
#          sizeLimit: 500

        #env:
        # - name: APP_COLOR
        #   value: red

        ##this is using the configmap
        #kubectl create configmap appcolor --from-literal=APP_COLOR=blue
        #envFrom:
        #  - configMapRef:
        #      name: appcolor

        ###This section using configmap.yaml
        envFrom:
          - configMapRef:
              name: app-config

        ###kubectl create configmap config-from-file-cmd --from-file=k/03_workloads_scheduling/configmap.properties
        #env:
        #  - name: linux_user
        #    valueFrom:
        #      configMapKeyRef:
        #        name: configmap-from-file
        #        key: linux_user
        #envFrom:
        #  - configMapRef:
        #      name: appcolor
      ####################### Pending from configMapKeyRef and volumes
      ###Secret
      #kubectl create secret generic appsecret --from-literal=APP_COLOR=pink
      #kubectl get secret appsecret -o jsonpath='{.data}'
#        volumeMounts:
#        - name: newsecret
#          mountPath: "/etc/newsecret"
#            #readOnly: true
#      volumes:
#        - name: newsecret
#          secret:
#            secretName: newsecret

#        volumeMounts:
#          - mountPath: "/opt/data"
#            name: simpleapp-storage
#      volumes:
#        - name: simpleapp-storage
#          persistentVolumeClaim:
#            claimName: simpleapp-pv-claim 
#kubectl set image deployment/simpleapp simpleapp-container-deployment=9538253250/simpleapp:update
#kubectl edit deployment/nginx-deployment
#kubectl rollout status deployment/simpleapp
#kubectl rollout undo deployment/simpleapp -> to back to previous version
#kubectl rollout restart deployment/simpleapp
#kubectl scale --replicas=8 deployment/simpleapp
#kubectl scale --replicas=3 deployment/simpleapp
#max 25% unavaliable and max 25 surge in deployment update
#kubectl autoscale deployment/simpleapp --min=10 --max=10
#kubectl rollout pause deployment/simpleapp
#kubectl rollout history deployment/simpleapp
#kubectl set image update chnages here
#kubectl rollout resume deployment/simpleapp
#recreate
#rollingUpdate
